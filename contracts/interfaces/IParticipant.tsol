pragma ever-solidity >=0.62.0;
pragma AbiHeader expire;

/**
 * @title IParticipant
 *
 * @dev This interface represents a participant in the DePool staking platform.
 * It provides methods for handling completed rounds, receiving operation status, and managing transfers.
 *
 * Implemented by the {StrategyDePool} contract.
 */
interface IParticipant {
    /**
     * @dev Notifies a participant when a round is completed.
     *
     * @param roundId The ID of the completed round
     * @param reward The Participant's reward in the completed round (in nanotons)
     * @param ordinaryStake The ordinary stake in the completed round
     * @param vestingStake The vesting stake in the completed round
     * @param lockStake The lock stake in the completed round
     * @param reinvest Whether the ordinary stake is automatically reinvested (prolonged)
     * @param reason The reason the round is completed (See enum CompletionReason)
     */
    function onRoundComplete(
        uint64 roundId,
        uint64 reward,
        uint64 ordinaryStake,
        uint64 vestingStake,
        uint64 lockStake,
        bool reinvest,
        uint8 reason) external;

    /**
     * @dev Receives an answer from the DePool
     *
     * @param errcode The error code of the operation
     * @param comment An additional value for a certain error code
     */
    function receiveAnswer(uint32 errcode, uint64 comment) external;

    /**
     * @dev Handles a transfers.
     *
     * @param source The address from which the transfer originated
     * @param amount The amount transferred
     */
    function onTransfer(address source, uint128 amount) external;
}
