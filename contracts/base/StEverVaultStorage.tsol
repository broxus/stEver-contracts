pragma ever-solidity >=0.62.0;


import "../interfaces/IStEverVault.tsol";

abstract contract StEverVaultStorage is IStEverVault {

    // static
    uint128 public static nonce;
    uint256 static governance;
    TvmCell static platformCode;
    TvmCell static accountCode;
    TvmCell static clusterCode;

    // balances
    uint128 stEverSupply;
    uint128 totalAssets;
    uint128 availableAssets;
    uint128 totalStEverFee;
    uint128 effectiveEverAssets;
    uint128 remainingUnlockAssets;
    uint128 unlockPerSecond;
    // tokens
    address stEverWallet;
    address stTokenRoot;
    //
    uint64 lastUnlockTime;
    uint128 fullUnlockSeconds = 2 days;
    uint128 remainingSeconds = 2 days;
    // modifiable field
    uint128 gainFee;
    uint32 stEverFeePercent;
    uint128 minStrategyDepositValue = 100 ever;
    uint128 minStrategyWithdrawValue = 100 ever;
    bool isPaused;
    address strategyFactory;
    uint64 withdrawHoldTime; // seconds

    address owner;
    uint32 accountVersion;
    uint32 stEverVaultVersion;
    uint32 clusterVersion;
    // mappings
    mapping(address => StrategyParams) public strategies;
    mapping(address => ClustersPool) public clusterPools;
    mapping(uint64 => PendingWithdraw) pendingWithdrawals;
    // emergency
    EmergencyState emergencyState;

}
